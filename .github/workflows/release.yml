name: Eel Build and Publish

on:
    push:
        tags:
            - 'v*'

jobs:
    build:
        runs-on: windows-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 16

            - name: Cache Node.js packages
              id: cache-npm
              uses: actions/cache@v3
              with:
                  path: web/node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('web/package-lock.json') }}-${{ github.ref }}
                  restore-keys: |
                      ${{ runner.os }}-node-${{ hashFiles('web/package-lock.json') }}-
                      ${{ runner.os }}-node-

            - name: Install Node.js dependencies
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: |
                  cd web
                  npm ci

            - name: Build Web
              run: |
                  cd web
                  npm run build

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.9'

            - name: Cache Python packages
              id: cache-pip
              uses: actions/cache@v3
              with:
                  path: ${{ env.pythonLocation }}/Lib/site-packages
                  key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ github.ref }}
                  restore-keys: |
                      ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-
                      ${{ runner.os }}-pip-

            - name: Install Python dependencies
              if: steps.cache-pip.outputs.cache-hit != 'true'
              run: |
                  pip install -r requirements.txt

            - name: Install Python pyinstaller
              run: pip install pyinstaller

            - name: Build executable
              run: |
                  python -m eel main.py web/dist --add-data "images;images" --add-data "config.ini;." --add-data "config;config" --noconfirm --noconsole --uac-admin --name mhxy_script

            - name: Zip Build
              run: |
                  Compress-Archive -Path .\dist\mhxy_script -DestinationPath .\mhxy_script.zip

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1.0.0
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./mhxy_script.zip
                  asset_name: mhxy_script.zip
                  asset_content_type: application/zip
